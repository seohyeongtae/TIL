          20200803 (월)



311 페이지 데이터 삽입, 수정

CREATE TABLE CUSTOM(
ID CHAR(5),
PWD VARCHAR2(20),
NAME VARCHAR2(20)
);
ALTER TABLE CUSTOM ADD GRADE NUMBER(10);

ALTER TABLE CUSTOM RENAME COLUMN GRADE TO LEVELS;

ALTER TABLE CUSTOM MODIFY LEVELS NUMBER(5);

ALTER TABLE CUSTOM DROP COLUMN LEVELS;

RENAME CUSTOM TO CUSTOMER;


360페이지 제약조건 
NOT NULL
UNIQUE
PRIMARY KEY
FOREIGN KEY
CHECK


ALTER TABLE CUSTOMER ADD CONSTRAINT cc CHECK(PWD IS NOT NULL);
cc 은 제약조건의 이름 아무거나 지정해도됨 중복은 불가

ALTER TABLE CUSTOMER DROP CONSTRAINT cc
제약조건 삭제

ALTER TABLE CUSTOMER ADD CONSTRAINT uu UNIQUE (PWD,NAME);

ALTER TABLE CUSTOMER ADD CONSTRAINT pk PRIMARY KEY(ID);
PRIMARY 키는 자동으로 NOT NULL 이 지정된다. 
ALTER TABLE CUSTOMER DROP CONSTRAINT pk;



ALTER TABLE CORDER ADD CONSTRAINT 
order_fk1 FOREIGN KEY (USERID) REFERENCES CUSTOMER (ID);

ALTER TABLE CORDER ADD CONSTRAINT 
order_fk2 FOREIGN KEY (PRODUCTID) REFERENCES PRODUCT (ID);

제약조건 넣기 두가지의 컬럼의 형식이 똑같아야 한다.
FK 지정하여 데이터 입력에 제한조건 두기 CUSTOMER, PRODUCT 에 있는 아이디여야만
데이터 입력이 된다. 



392페이지 기본값을 정하는 DEFAULT
열에 저장할 값이 지정되지 않았을 경우 기본값 지정



348페이지 시퀀스
오라클 데이터베이스에서 특정 규칙에 맞는 연속 숫자를 생성하는 객체
테이블과 별개로 CREATE 시켜야한다.
CREATE SEQUENCE PRODUCT_SEQ
START WITH 100
INCREMENT BY 1;


INSERT INTO PRODUCT VALUES(PRODUCT_SEQ.NEXTVAL,'바지',10000,3.5,SYSDATE);
INSERT INTO PRODUCT VALUES(PRODUCT_SEQ.NEXTVAL,'바지2',20000,3.5,SYSDATE);
INSERT INTO PRODUCT VALUES(PRODUCT_SEQ.NEXTVAL,'바지3',30000,3.5,SYSDATE);
COMMIT;
          만든 시퀀스를 NEXTVAL 로 넣어야한다.

DROP SEQUENCE PRODUCT_SEQ;
지웠다 다시 만들면 100번부터 다시 시작

SELECT PRODUCT_SEQ.CURRVAL FROM DUAL;
현재 몇번까지 진행되었는지 조회  시퀀스는 테이블이 없기때문에 DUAL 사용

ALTER SEQUENCE



DDL
CREATE, ALTER, DROP(TRUNCATE)

ALTER
- COLUMN 변경
- CONSTRAINT

SEQUENCE







DROP SEQUENCE ITEM_SEQUENCE;
DROP SEQUENCE USERITEM_SEQ;

DROP TABLE USER_ITEM;
DROP TABLE GAME_USER;
DROP TABLE GAME_ITEM;

CREATE TABLE GAME_USER(
ID VARCHAR2(10),
PWD VARCHAR2(20),
NAME VARCHAR2(30)
);
ALTER TABLE GAME_USER ADD CONSTRAINT user_pk PRIMARY KEY (ID);
ALTER TABLE GAME_USER ADD CONSTRAINT user_pwd_nn CHECK(PWD IS NOT NULL);
ALTER TABLE GAME_USER ADD CONSTRAINT user_pwd_check CHECK(LENGTH(PWD) > 3);
ALTER TABLE GAME_USER ADD CONSTRAINT user_name_nn CHECK(NAME IS NOT NULL);


CREATE SEQUENCE ITEM_SEQUENCE
 START WITH 100
  INCREMENT BY 1;

CREATE TABLE GAME_ITEM(
ID NUMBER(10),
NAME VARCHAR2(30),
PRICE NUMBER(20)
);
ALTER TABLE GAME_ITEM ADD CONSTRAINT item_pk PRIMARY KEY (ID);
ALTER TABLE GAME_ITEM ADD CONSTRAINT item_un UNIQUE (NAME);
ALTER TABLE GAME_ITEM ADD REGDATE DATE;
ALTER TABLE GAME_ITEM MODIFY PRICE DEFAULT 10000;
COMMIT;

INSERT INTO GAME_USER VALUES('id01','pwd01','이말숙');
INSERT INTO GAME_USER VALUES('id02','pwd02','김말숙');
INSERT INTO GAME_USER VALUES('id03','pwd03','황말숙');
COMMIT;

INSERT INTO GAME_ITEM VALUES(ITEM_SEQUENCE.NEXTVAL,'칼',10000,SYSDATE);
INSERT INTO GAME_ITEM VALUES(ITEM_SEQUENCE.NEXTVAL,'총',20000,SYSDATE);
INSERT INTO GAME_ITEM VALUES(ITEM_SEQUENCE.NEXTVAL,'차',30000,SYSDATE);
COMMIT;

SELECT * FROM GAME_USER;
SELECT * FROM GAME_ITEM;


CREATE SEQUENCE USERITEM_SEQ
START WITH 1000
INCREMENT BY 1;

CREATE TABLE USER_ITEM(
ID VARCHAR2(20),
USER_ID VARCHAR2(10),
ITEM_ID NUMBER(10),
QT NUMBER(10)
);
ALTER TABLE USER_ITEM ADD CONSTRAINT ui_pk PRIMARY KEY (ID);
ALTER TABLE USER_ITEM ADD CONSTRAINT ui_fk1 FOREIGN KEY (USER_ID) REFERENCES GAME_USER(ID);
ALTER TABLE USER_ITEM ADD CONSTRAINT ui_fk2 FOREIGN KEY (ITEM_ID) REFERENCES GAME_ITEM(ID);
ALTER TABLE USER_ITEM MODIFY QT DEFAULT 1;

INSERT INTO USER_ITEM VALUES (TO_CHAR(SYSDATE,'YYYYMMDD')|| USERITEM_SEQ.NEXTVAL,'id01',100,3);
INSERT INTO USER_ITEM (ID,USER_ID,ITEM_ID) VALUES (TO_CHAR(SYSDATE,'YYYYMMDD')|| USERITEM_SEQ.NEXTVAL,'id01',101);
COMMIT;

SELECT * FROM USER_ITEM;



ALTER TABLE USER_ITEM DISABLE CONSTRAINT ui_fk1;
ALTER TABLE USER_ITEM DISABLE CONSTRAINT ui_fk2;

DELETE FROM GAME_USER WHERE ID='id01';

PK FK 가 연결되어있으면 삭제가 되지 않기때문에 제약조건을 사용안함으로 바꾼다음
삭제를해야한다. 제약조건이 있는 상태에서는
다른 컬럼에서 데이터를 가지고온 USER_ITEM 을 먼저 삭제해야한다.